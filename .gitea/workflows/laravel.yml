name: CI for Laravel Application with Docker

on: [push]

jobs:
  # Job 1: Build and test the application
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: reservationprojectv2
          MYSQL_USER: sail
          MYSQL_PASSWORD: password
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout the codebase
        uses: actions/checkout@v3

      # Build the Docker image for the Laravel app using Dockerfile
      - name: Build Docker image
        run: docker build -t devblaze/reservationproject:latest .

      # Run the newly created Docker container in detached mode and link to MySQL
      - name: Run Laravel service container
        run: docker run -d --rm --name laravel_app --network host devblaze/reservationproject:latest

      # Wait for the app to start (use sleep or a health check)
      - name: Sleep for container startup
        run: sleep 15

      # Run php artisan commands inside the container to ensure Laravel is working:
      # This will ensure that Laravel, migrations, and seeding work correctly inside the container.
      - name: Run php artisan tests inside the container
        run: |
          docker exec laravel_app php artisan migrate --seed
          docker exec laravel_app php artisan scout:import "App\\Models\\Event"
          docker exec laravel_app php artisan test

      # Build and check the frontend (e.g., with Vite)
      - name: Run Vite build
        run: |
          docker exec laravel_app npm run build

      # Stop the services and clean things up
      - name: Stop container after tests
        run: docker stop laravel_app

      - name: Tag docker image
        run: docker tag devblaze/reservationproject:latest

  # Job 2: Deploy - Build the image and push to Docker Hub if tests pass
  deploy:
    runs-on: ubuntu-latest
    needs: build  # This job will run only if the "build" job passes successfully

    steps:
      - name: Docker hub login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Push the Docker image to Docker Hub
      - name: Push Docker image to Docker Hub
        run: docker push devblaze/reservationproject:latest
