version: '3.8'
services:
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    command: --cleanup --interval 300 # Check for updates every 5 minutes and remove old containers

  traefik:
    image: traefik:v2.5
    command:
      - "--api.insecure=true" # Optional, allows Traefik to show its dashboard at :8080
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80" # HTTP entry point
    ports:
      - "9001:80"   # Expose Traefik on port 80 for HTTP
      - "9002:8080" # Optional, expose Traefik dashboard
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock" # Enables Traefik to access Docker services
    networks:
      - reservationproject

  php:  # PHP-FPM service for Laravel
    image: devblaze/reservationproject:latest  # Use your custom-built Laravel + PHP-FPM image
    volumes:
      - .:/var/www/html   # Mount code into PHP Image
      - ./public:/var/www/html/public  # Make sure to mount public folder for static assets
    networks:
      - reservationproject
    expose:
      - 9000  # FPM listens on port 9000 for incoming FastCGI requests from Traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.laravel.rule=Host(`thessalonikiserver.duckdns.org`)" # Replace with your domain
      - "traefik.http.services.laravel.loadbalancer.server.port=9000"
      - "traefik.http.middlewares.laravel-php.replacepathregex.regex=^/static/(.*)"
      - "traefik.http.middlewares.laravel-php.replacepathregex.replacement=/var/www/html/public/$1"

  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
    volumes:
      - mysql:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - reservationproject

  meilisearch:
    image: getmeili/meilisearch:latest
    environment:
      MEILI_ENV: production
    ports:
      - "7700:7700"  # Expose port 7700 for Meilisearch
    volumes:
      - meilisearch:/meili_data  # Persist data between restarts
    networks:
      - reservationproject
    deploy:
      replicas: 1  # You can scale if needed
      resources:
        limits:
          cpus: "0.5"
          memory: 256M

networks:
  reservationproject:
    driver: bridge

volumes:
  mysql:
    driver: local
  meilisearch:
    driver: local
