version: '3.8'

services:
  # Watchtower: Monitors and updates your Docker containers
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    command: --cleanup --interval 300  # Watchtower will check for image updates and perform cleanup

  # Traefik: Handles routing and load balancing
  traefik:
    image: traefik:v2.5
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
    ports:
      - "8080:80"   # Traefik HTTP port
      - "8443:443"  # Traefik HTTPS port
      - "8008:8080" # Traefik dashboard
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - reservationproject

  # PHP-FPM service: Handles Laravel Backend API
  php:
    image: devblaze/reservationproject:latest  # PHP-FPM Image from Docker Hub
    volumes:
      - .:/var/www/html
      - ./public:/var/www/html/public  # Mount the public folder to sync with file changes
    networks:
      - reservationproject
    expose:
      - "9000"  # Expose PHP-FPM port 9000
    depends_on:
      - mysql
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.laravel.rule=Host(`192.168.4.63`)"  # Adjust with your domain or public IP
      - "traefik.http.routers.laravel.entrypoints=web"
      - "traefik.http.services.laravel.loadbalancer.server.port=9000"

  # MySQL Database
  mysql:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: reservationprojectv2
      MYSQL_USER: sail
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: password
    volumes:
      - mysql:/var/lib/mysql
    networks:
      - reservationproject

  # MeiliSearch Setup
  meilisearch:
    image: getmeili/meilisearch:latest
    environment:
      MEILI_ENV: production
    ports:
      - "7700:7700"
    volumes:
      - meili_data:/meili_data
    networks:
      - reservationproject

networks:
  # Shared Docker network to enable inter-container communication
  reservationproject:
    driver: bridge

volumes:
  # Persisting MySQL and MeiliSearch Data
  mysql:
    driver: local
  meili_data:
    driver: local
