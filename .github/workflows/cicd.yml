name: CI/CD for Laravel Application

on:
  push:
    branches: [ master ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: reservationprojectv2
          MYSQL_USER: sail
          MYSQL_PASSWORD: password
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build and cache Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: false
        load: true
        tags: devblaze/reservationproject:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Run Laravel service container
      run: docker run -d --rm --name laravel_app --network host devblaze/reservationproject:latest

    - name: Wait for container startup
      run: sleep 15

    - name: Generate app key
      run: docker exec laravel_app php artisan migrate --force

    - name: Test the app
      run: docker exec laravel_app php artisan test

    - name: Stop container after tests
      run: docker stop laravel_app

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: devblaze/reservationproject:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
